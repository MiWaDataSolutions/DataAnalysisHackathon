/* tslint:disable */
/* eslint-disable */
/**
 * Data Analyst API
 * API for the Data Analyst project.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DataFileSessionStatus } from './DataFileSessionStatus';
import {
    DataFileSessionStatusFromJSON,
    DataFileSessionStatusFromJSONTyped,
    DataFileSessionStatusToJSON,
} from './DataFileSessionStatus';

/**
 * 
 * @export
 * @interface DataSessionDTO
 */
export interface DataSessionDTO {
    /**
     * 
     * @type {string}
     * @memberof DataSessionDTO
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof DataSessionDTO
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof DataSessionDTO
     */
    schemaName?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof DataSessionDTO
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof DataSessionDTO
     */
    lastUpdatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof DataSessionDTO
     */
    userId?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof DataSessionDTO
     */
    initialFileHasHeaders?: boolean;
    /**
     * 
     * @type {DataFileSessionStatus}
     * @memberof DataSessionDTO
     */
    processedStatus?: DataFileSessionStatus;
}



/**
 * Check if a given object implements the DataSessionDTO interface.
 */
export function instanceOfDataSessionDTO(value: object): value is DataSessionDTO {
    return true;
}

export function DataSessionDTOFromJSON(json: any): DataSessionDTO {
    return DataSessionDTOFromJSONTyped(json, false);
}

export function DataSessionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): DataSessionDTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'schemaName': json['schemaName'] == null ? undefined : json['schemaName'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'lastUpdatedAt': json['lastUpdatedAt'] == null ? undefined : (new Date(json['lastUpdatedAt'])),
        'userId': json['userId'] == null ? undefined : json['userId'],
        'initialFileHasHeaders': json['initialFileHasHeaders'] == null ? undefined : json['initialFileHasHeaders'],
        'processedStatus': json['processedStatus'] == null ? undefined : DataFileSessionStatusFromJSON(json['processedStatus']),
    };
}

export function DataSessionDTOToJSON(value?: DataSessionDTO | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'schemaName': value['schemaName'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'lastUpdatedAt': value['lastUpdatedAt'] == null ? undefined : ((value['lastUpdatedAt']).toISOString()),
        'userId': value['userId'],
        'initialFileHasHeaders': value['initialFileHasHeaders'],
        'processedStatus': DataFileSessionStatusToJSON(value['processedStatus']),
    };
}

